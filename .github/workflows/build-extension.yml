name: Build Extension

on:
  push:
    branches: ["VisualStudio22"]
    tags:
      - 'VisualStudio2022-v*'
  pull_request:
    branches: ["VisualStudio22"]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Add NuGet to PATH
        uses: NuGet/setup-nuget@v2

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v2
        with:
          vs-version: "17.0"
          msbuild-architecture: amd64

      - name: Build GeomView
        shell: cmd
        run: |
          cd .scripts
          call install_geomview.bat

      - name: Build GLTool
        shell: cmd
        run: |
          cd .scripts
          call install_gltool.bat

      - name: restore nuget packages
        run: nuget restore visualstudio_2022\geometrydebugger\geometrydebugger.sln

      - name: build geometrydebugger vsix
        run: msbuild visualstudio_2022\geometrydebugger\geometrydebugger\geometrydebugger.csproj /p:configuration=release /p:deployextension=false /p:zippackagecompressionlevel=notcompressed /p:platform=x64

      - name: Upload GLTool.dll
        uses: actions/upload-artifact@v4
        with:
            name: GLTool.dll
            path: VisualStudio_2022/GeometryDebugger/GeometryDebugger/GLTool.dll
      - name: Upload GLTool.pdb  
        uses: actions/upload-artifact@v4
        with:
            name: GLTool.pdb
            path: VisualStudio_2022/GeometryDebugger/GeometryDebugger/GLTool.pdb
      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload VSIX to Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: VisualStudio_2022/GeometryDebugger/GeometryDebugger/bin/x64/Release/GeometryDebugger.vsix
          asset_name: GeometryDebugger.vsix
          asset_content_type: application/vsix
