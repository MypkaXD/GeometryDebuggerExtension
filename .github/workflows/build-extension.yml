name: Build Extension

on:
  push:
    branches: ["VisualStudio22"]
    tags:
      - 'VisualStudio2022-v*'
  pull_request:
    branches: ["VisualStudio22"]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Add NuGet to PATH
        uses: NuGet/setup-nuget@v2

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v2
        with:
          vs-version: "17.0"
          msbuild-architecture: amd64

      - name: Build GeomView
        shell: cmd
        run: |
          cd .scripts
          call install_geomview.bat

      - name: Build GLTool
        shell: cmd
        run: |
          cd .scripts
          call install_gltool.bat

      - name: Restore NuGet packages
        run: nuget restore VisualStudio_2022\GeometryDebugger\GeometryDebugger.sln

      - name: Build GeometryDebugger VSIX
        run: msbuild VisualStudio_2022\GeometryDebugger\GeometryDebugger\GeometryDebugger.csproj ^
          /p:Configuration=Release ^
          /p:DeployExtension=false ^
          /p:ZipPackageCompressionLevel=NotCompressed ^
          /p:Platform=x64

      - name: Check if VSIX exists
        run: |
          if not exist "VisualStudio_2022\GeometryDebugger\GeometryDebugger\bin\x64\Release\GeometryDebugger.vsix" (
            echo "ERROR: VSIX not found!"
            exit /b 1
          )

      - name: Upload VSIX as artifact
        uses: actions/upload-artifact@v4
        with:
          name: GeometryDebugger.vsix
          path: VisualStudio_2022\GeometryDebugger\GeometryDebugger\bin\x64\Release\GeometryDebugger.vsix

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload VSIX to Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: VisualStudio_2022/GeometryDebugger/GeometryDebugger/bin/x64/Release/GeometryDebugger.vsix
          asset_name: GeometryDebugger.vsix
          asset_content_type: application/vsix
